<?php

// Include the WordPress REST API client library
require 'vendor/autoload.php';

// Set your API key and store ID
$api_key = 'your-api-key';
$store_id = 'your-store-id';

// Set the API endpoint URL
$endpoint_url = "https://areskidsport.hicorecloud.se/WebShopApi/api/{$store_id}/items";

// Set the headers for the request
$headers = [
  'Authorization' => "Bearer {$api_key}",
  'Accept' => 'application/json'
];

// Set the query parameters for the request
$query_params = [
  'sinceversion' => 'your-since-version'
];

// Create a new Guzzle HTTP client
$client = new \GuzzleHttp\Client();

// Make the GET request
$response = $client->request('GET', $endpoint_url, [
  'headers' => $headers,
  'query' => $query_params
]);

// Check the response status code
if ($response->getStatusCode() == 200) {
  // Get the response body
  $response_body = json_decode($response->getBody(), true);

  // Check if there are more pages of data
  $has_more_pages = isset($response_body['hasMorePages']) && $response_body['hasMorePages'];

  // Loop through the pages of data
  while ($has_more_pages) {
    // Set the since version for the next page
    $query_params['sinceversion'] = $response_body['nextSinceVersion'];

    // Make the GET request
    $response = $client->request('GET', $endpoint_url, [
      'headers' => $headers,
      'query' => $query_params
    ]);

    // Check the response status code
    if ($response->getStatusCode() == 200) {
      // Get the response body
      $response_body = json_decode($response->getBody(), true);

      // Check if there are more pages of data
      $has_more_pages = isset($response_body['hasMorePages']) && $response_body['hasMorePages'];

      // Loop through the items in the response body
      foreach ($response_body['items'] as $item) {
        // Send the item data to the WordPress REST API
        // Replace "your-rest-api-route" with the route for your custom endpoint
        $wp_response = wp_remote_post('your-rest-api-route', [
          'headers' => [
            'Content-Type' => 'application/json'
          ],
          'body' => json_encode($item)
        ]);

        // Check the response status code
        if (is_wp_error($wp_response)) {
          // There was an error sending the data
          //
